plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://maven.kosmx.dev/' }
	maven { url = 'https://maven.shedaniel.me/' }
	maven { url = 'https://jitpack.io' }
	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		url = "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
	// The Maven with the mods source
	maven {url 'https://libs.azuredoom.com:4443/mods'}

}

loom {
	runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=more-rpg-classes"

			runDir "build/datagen"
		}
	}
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	// Dependencies
	include(implementation("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"))
	annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")
	implementation include("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
       exclude(group: "net.fabricmc.fabric-api")
    }
	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-rc.4")))
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")
	modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")

	//modImplementation("maven.modrinth:berserker-rpg-class:${project.berserker_version}")
	//modImplementation("maven.modrinth:forcemaster-rpg-class:${project.forcemaster_version}")
	//modImplementation("maven.modrinth:witcher-rpg-class:${project.witcher_version}")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}